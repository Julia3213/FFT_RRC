/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "rrcstr.asn1"
 * 	`asn1c -D src -fcompound-names -fno-include-deps`
 */

#ifndef	_VelocityEstimate_H_
#define	_VelocityEstimate_H_


#include <asn_application.h>

/* Including external dependencies */
#include "HorizontalVelocity.h"
#include "HorizontalWithVerticalVelocity.h"
#include "HorizontalVelocityWithUncertainty.h"
#include "HorizontalWithVerticalVelocityAndUncertainty.h"
#include <constr_CHOICE.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum VelocityEstimate_PR {
	VelocityEstimate_PR_NOTHING,	/* No components present */
	VelocityEstimate_PR_horizontalVelocity,
	VelocityEstimate_PR_horizontalWithVerticalVelocity,
	VelocityEstimate_PR_horizontalVelocityWithUncertainty,
	VelocityEstimate_PR_horizontalWithVerticalVelocityAndUncertainty
} VelocityEstimate_PR;

/* VelocityEstimate */
typedef struct VelocityEstimate {
	VelocityEstimate_PR present;
	union VelocityEstimate_u {
		HorizontalVelocity_t	 horizontalVelocity;
		HorizontalWithVerticalVelocity_t	 horizontalWithVerticalVelocity;
		HorizontalVelocityWithUncertainty_t	 horizontalVelocityWithUncertainty;
		HorizontalWithVerticalVelocityAndUncertainty_t	 horizontalWithVerticalVelocityAndUncertainty;
	} choice;
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} VelocityEstimate_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_VelocityEstimate;
extern asn_CHOICE_specifics_t asn_SPC_VelocityEstimate_specs_1;
extern asn_TYPE_member_t asn_MBR_VelocityEstimate_1[4];
extern asn_per_constraints_t asn_PER_type_VelocityEstimate_constr_1;

#ifdef __cplusplus
}
#endif

#endif	/* _VelocityEstimate_H_ */
#include <asn_internal.h>

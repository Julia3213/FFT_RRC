/*
 * Generated by asn1c-0.9.29 (http://lionet.info/asn1c)
 * From ASN.1 module "InformationElements"
 * 	found in "rrcstr.asn1"
 * 	`asn1c -D src -fcompound-names -fno-include-deps`
 */

#ifndef	_MultiModeCapability_H_
#define	_MultiModeCapability_H_


#include <asn_application.h>

/* Including external dependencies */
#include <NativeEnumerated.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */
typedef enum MultiModeCapability {
	MultiModeCapability_tdd	= 0,
	MultiModeCapability_fdd	= 1,
	MultiModeCapability_fdd_tdd	= 2
} e_MultiModeCapability;

/* MultiModeCapability */
typedef long	 MultiModeCapability_t;

/* Implementation */
extern asn_per_constraints_t asn_PER_type_MultiModeCapability_constr_1;
extern asn_TYPE_descriptor_t asn_DEF_MultiModeCapability;
extern const asn_INTEGER_specifics_t asn_SPC_MultiModeCapability_specs_1;
asn_struct_free_f MultiModeCapability_free;
asn_struct_print_f MultiModeCapability_print;
asn_constr_check_f MultiModeCapability_constraint;
ber_type_decoder_f MultiModeCapability_decode_ber;
der_type_encoder_f MultiModeCapability_encode_der;
xer_type_decoder_f MultiModeCapability_decode_xer;
xer_type_encoder_f MultiModeCapability_encode_xer;
oer_type_decoder_f MultiModeCapability_decode_oer;
oer_type_encoder_f MultiModeCapability_encode_oer;
per_type_decoder_f MultiModeCapability_decode_uper;
per_type_encoder_f MultiModeCapability_encode_uper;

#ifdef __cplusplus
}
#endif

#endif	/* _MultiModeCapability_H_ */
#include <asn_internal.h>
